{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/Form/Form.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","state","name","number","handleInputChange","event","currentTarget","value","console","log","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","uniqueIdName","uuid","uniqueIdNumber","this","htmlFor","className","s","formLabel","id","type","pattern","title","required","onChange","formInput","formBtn","Component","ContactListItem","onDelete","contactItem","contactName","contactNumber","deleteContactBtn","onClick","ContactList","contacts","contactsList","map","contact","Filter","filterInputLabel","filterInput","placeholder","initialState","App","filter","formSubmitHandler","object","includes","trim","alert","newObject","uuidv4","prevState","handleInputFilter","filterToLowerCase","toLocaleLowerCase","evt","deleteContact","contactId","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb23505b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"Form_formLabel__2E6wA\",\"formInput\":\"Form_formInput__C82qL\",\"formBtn\":\"Form_formBtn__i_stP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__17G8C\",\"contactName\":\"ContactListItem_contactName__2aCJA\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__3UYkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__4NwFS\",\"filterInput\":\"Filter_filterInput__3NUjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3-cPL\"};","import { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    console.log(event.currentTarget.value);\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const uniqueIdName = uuid();\r\n    const uniqueIdNumber = uuid();\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={uniqueIdName} className={s.formLabel}>\r\n          Name\r\n        </label>\r\n        <br />\r\n        <input\r\n          id={uniqueIdName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleInputChange}\r\n          className={s.formInput}\r\n        />\r\n        <br />\r\n        <label htmlFor={uniqueIdNumber} className={s.formLabel}>\r\n          Number\r\n        </label>\r\n        <br />\r\n        <input\r\n          id={uniqueIdNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleInputChange}\r\n          className={s.formInput}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className={s.formBtn}>\r\n          add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => (\r\n  <li className={s.contactItem}>\r\n    <p className={s.contactName}>\r\n      {name}: <span className={s.contactNumber}>{number}</span>\r\n    </p>\r\n    <button\r\n      className={s.deleteContactBtn}\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className={s.contactsList}>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDelete={onDelete}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <label className={s.filterInputLabel}>Find contacts by name</label>\r\n    <br />\r\n    <input\r\n      className={s.filterInput}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"Contact\"\r\n    />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport \"./App.css\";\nimport Filter from \"./Filter/Filter\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    // const contacts = localStorage.getItem(\"contacts\");\n    // const parsedContacts = JSON.parse(contacts);\n    // this.setState({ contacts: parsedContacts });\n\n    // if (parsedContacts !== null) {\n    //   this.setState({ contacts: parsedContacts });\n    // }\n\n    this.setState({ contacts: parsedContacts ?? initialState }); // ??  --- https://learn.javascript.ru/nullish-coalescing-operator\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = (object) => {\n    const { name, number } = object;\n    const { contacts } = this.state;\n    if (contacts.map((contact) => contact.name).includes(name.trim()))\n      return alert(`\"${name.trim()}\" is already in contacts`);\n    if (contacts.map((contact) => contact.number).includes(number.trim()))\n      return alert(`\"${number.trim()}\" is already in contacts`);\n\n    const newObject = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newObject],\n    }));\n  };\n\n  handleInputFilter = () => {\n    const { contacts, filter } = this.state;\n    const filterToLowerCase = filter.toLocaleLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().trim().includes(filterToLowerCase)\n    );\n  };\n\n  handleInputChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"InputWrapper\">\n          <h1 className=\"inputTitle\">Phonebook</h1>\n          <Form onSubmit={this.formSubmitHandler} />\n          <br />\n          <Filter value={this.state.filter} onChange={this.handleInputChange} />\n        </div>\n        <div className=\"contactsSection\">\n          <h2 className=\"contactsSectionTitle\">Contacts</h2>\n          <ContactList\n            contacts={this.handleInputFilter()}\n            onDelete={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}